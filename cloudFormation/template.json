{
    "Transform": "AWS::Serverless-2016-10-31",
    "Resources": {
        "Api": {
            "Type": "AWS::Serverless::Api",
            "Properties": {
                "Name": {
                    "Fn::Sub": [
                        "${ResourceName} From Stack ${AWS::StackName}",
                        {
                            "ResourceName": "Api"
                        }
                    ]
                },
                "StageName": "Prod",
                "DefinitionBody": {
                    "openapi": "3.0",
                    "info": {},
                    "paths": {
                        "/messageId": {
                            "get": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetFhirMessage.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        },
                        "/message": {
                            "post": {
                                "x-amazon-apigateway-integration": {
                                    "httpMethod": "POST",
                                    "type": "aws_proxy",
                                    "uri": {
                                        "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostHl7Message.Arn}/invocations"
                                    }
                                },
                                "responses": {}
                            }
                        }
                    }
                },
                "EndpointConfiguration": "REGIONAL",
                "TracingEnabled": true,
                "Cors": {
                    "MaxAge": 5
                }
            }
        },
        "GetFhirMessage": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "Description": {
                    "Fn::Sub": [
                        "Stack ${AWS::StackName} Function ${ResourceName}",
                        {
                            "ResourceName": "GetFhirMessage"
                        }
                    ]
                },
                "CodeUri": "s3://hl7-lambdas/GET.zip",
                "Handler": "lambda_function.lambda_handler",
                "Runtime": "python3.8",
                "MemorySize": 3008,
                "Timeout": 30,
                "Tracing": "Active",
                "Events": {
                    "ApiGETmessageId": {
                        "Type": "Api",
                        "Properties": {
                            "Path": "/messageId",
                            "Method": "GET",
                            "RestApiId": {
                                "Ref": "Api"
                            }
                        }
                    }
                },
                "Policies": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "dynamodb:*",
                                "dax:*",
                                "application-autoscaling:DeleteScalingPolicy",
                                "application-autoscaling:DeregisterScalableTarget",
                                "application-autoscaling:DescribeScalableTargets",
                                "application-autoscaling:DescribeScalingActivities",
                                "application-autoscaling:DescribeScalingPolicies",
                                "application-autoscaling:PutScalingPolicy",
                                "application-autoscaling:RegisterScalableTarget",
                                "cloudwatch:DeleteAlarms",
                                "cloudwatch:DescribeAlarmHistory",
                                "cloudwatch:DescribeAlarms",
                                "cloudwatch:DescribeAlarmsForMetric",
                                "cloudwatch:GetMetricStatistics",
                                "cloudwatch:ListMetrics",
                                "cloudwatch:PutMetricAlarm",
                                "cloudwatch:GetMetricData",
                                "datapipeline:ActivatePipeline",
                                "datapipeline:CreatePipeline",
                                "datapipeline:DeletePipeline",
                                "datapipeline:DescribeObjects",
                                "datapipeline:DescribePipelines",
                                "datapipeline:GetPipelineDefinition",
                                "datapipeline:ListPipelines",
                                "datapipeline:PutPipelineDefinition",
                                "datapipeline:QueryObjects",
                                "ec2:DescribeVpcs",
                                "ec2:DescribeSubnets",
                                "ec2:DescribeSecurityGroups",
                                "iam:GetRole",
                                "iam:ListRoles",
                                "kms:DescribeKey",
                                "kms:ListAliases",
                                "sns:CreateTopic",
                                "sns:DeleteTopic",
                                "sns:ListSubscriptions",
                                "sns:ListSubscriptionsByTopic",
                                "sns:ListTopics",
                                "sns:Subscribe",
                                "sns:Unsubscribe",
                                "sns:SetTopicAttributes",
                                "lambda:CreateFunction",
                                "lambda:ListFunctions",
                                "lambda:ListEventSourceMappings",
                                "lambda:CreateEventSourceMapping",
                                "lambda:DeleteEventSourceMapping",
                                "lambda:GetFunctionConfiguration",
                                "lambda:DeleteFunction",
                                "resource-groups:ListGroups",
                                "resource-groups:ListGroupResources",
                                "resource-groups:GetGroup",
                                "resource-groups:GetGroupQuery",
                                "resource-groups:DeleteGroup",
                                "resource-groups:CreateGroup",
                                "tag:GetResources",
                                "kinesis:ListStreams",
                                "kinesis:DescribeStream",
                                "kinesis:DescribeStreamSummary"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "cloudwatch:GetInsightRuleReport",
                            "Effect": "Allow",
                            "Resource": "arn:aws:cloudwatch:*:*:insight-rule/DynamoDBContributorInsights*"
                        },
                        {
                            "Action": [
                                "iam:PassRole"
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                            "Condition": {
                                "StringLike": {
                                    "iam:PassedToService": [
                                        "application-autoscaling.amazonaws.com",
                                        "application-autoscaling.amazonaws.com.cn",
                                        "dax.amazonaws.com"
                                    ]
                                }
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "iam:CreateServiceLinkedRole"
                            ],
                            "Resource": "*",
                            "Condition": {
                                "StringEquals": {
                                    "iam:AWSServiceName": [
                                        "replication.dynamodb.amazonaws.com",
                                        "dax.amazonaws.com",
                                        "dynamodb.application-autoscaling.amazonaws.com",
                                        "contributorinsights.dynamodb.amazonaws.com",
                                        "kinesisreplication.dynamodb.amazonaws.com"
                                    ]
                                }
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": "*"
                        }
                    ]
                },
                "Environment": {
                    "Variables": {
                        "HL7MESSAGES_TABLE_NAME": {
                            "Ref": "hl7messages"
                        },
                        "HL7MESSAGES_TABLE_ARN": {
                            "Fn::GetAtt": [
                                "hl7messages",
                                "Arn"
                            ]
                        }
                    }
                }
            }
        },
        "GetFhirMessageLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "DeletionPolicy": "Retain",
            "Properties": {
                "LogGroupName": {
                    "Fn::Sub": "/aws/lambda/${GetFhirMessage}"
                }
            }
        },
        "PostHl7Message": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "Description": {
                    "Fn::Sub": [
                        "Stack ${AWS::StackName} Function ${ResourceName}",
                        {
                            "ResourceName": "PostHl7Message"
                        }
                    ]
                },
                "CodeUri": "s3://hl7-lambdas/POST.zip",
                "Handler": "lambda_function.lambda_handler",
                "Runtime": "python3.8",
                "MemorySize": 3008,
                "Timeout": 30,
                "Tracing": "Active",
                "Events": {
                    "ApiPOSTmessage": {
                        "Type": "Api",
                        "Properties": {
                            "Path": "/message",
                            "Method": "POST",
                            "RestApiId": {
                                "Ref": "Api"
                            }
                        }
                    }
                },
                "Policies": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": [
                                "dynamodb:*",
                                "dax:*",
                                "application-autoscaling:DeleteScalingPolicy",
                                "application-autoscaling:DeregisterScalableTarget",
                                "application-autoscaling:DescribeScalableTargets",
                                "application-autoscaling:DescribeScalingActivities",
                                "application-autoscaling:DescribeScalingPolicies",
                                "application-autoscaling:PutScalingPolicy",
                                "application-autoscaling:RegisterScalableTarget",
                                "cloudwatch:DeleteAlarms",
                                "cloudwatch:DescribeAlarmHistory",
                                "cloudwatch:DescribeAlarms",
                                "cloudwatch:DescribeAlarmsForMetric",
                                "cloudwatch:GetMetricStatistics",
                                "cloudwatch:ListMetrics",
                                "cloudwatch:PutMetricAlarm",
                                "cloudwatch:GetMetricData",
                                "datapipeline:ActivatePipeline",
                                "datapipeline:CreatePipeline",
                                "datapipeline:DeletePipeline",
                                "datapipeline:DescribeObjects",
                                "datapipeline:DescribePipelines",
                                "datapipeline:GetPipelineDefinition",
                                "datapipeline:ListPipelines",
                                "datapipeline:PutPipelineDefinition",
                                "datapipeline:QueryObjects",
                                "ec2:DescribeVpcs",
                                "ec2:DescribeSubnets",
                                "ec2:DescribeSecurityGroups",
                                "iam:GetRole",
                                "iam:ListRoles",
                                "kms:DescribeKey",
                                "kms:ListAliases",
                                "sns:CreateTopic",
                                "sns:DeleteTopic",
                                "sns:ListSubscriptions",
                                "sns:ListSubscriptionsByTopic",
                                "sns:ListTopics",
                                "sns:Subscribe",
                                "sns:Unsubscribe",
                                "sns:SetTopicAttributes",
                                "lambda:CreateFunction",
                                "lambda:ListFunctions",
                                "lambda:ListEventSourceMappings",
                                "lambda:CreateEventSourceMapping",
                                "lambda:DeleteEventSourceMapping",
                                "lambda:GetFunctionConfiguration",
                                "lambda:DeleteFunction",
                                "resource-groups:ListGroups",
                                "resource-groups:ListGroupResources",
                                "resource-groups:GetGroup",
                                "resource-groups:GetGroupQuery",
                                "resource-groups:DeleteGroup",
                                "resource-groups:CreateGroup",
                                "tag:GetResources",
                                "kinesis:ListStreams",
                                "kinesis:DescribeStream",
                                "kinesis:DescribeStreamSummary"
                            ],
                            "Effect": "Allow",
                            "Resource": "*"
                        },
                        {
                            "Action": "cloudwatch:GetInsightRuleReport",
                            "Effect": "Allow",
                            "Resource": "arn:aws:cloudwatch:*:*:insight-rule/DynamoDBContributorInsights*"
                        },
                        {
                            "Action": [
                                "iam:PassRole"
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                            "Condition": {
                                "StringLike": {
                                    "iam:PassedToService": [
                                        "application-autoscaling.amazonaws.com",
                                        "application-autoscaling.amazonaws.com.cn",
                                        "dax.amazonaws.com"
                                    ]
                                }
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "iam:CreateServiceLinkedRole"
                            ],
                            "Resource": "*",
                            "Condition": {
                                "StringEquals": {
                                    "iam:AWSServiceName": [
                                        "replication.dynamodb.amazonaws.com",
                                        "dax.amazonaws.com",
                                        "dynamodb.application-autoscaling.amazonaws.com",
                                        "contributorinsights.dynamodb.amazonaws.com",
                                        "kinesisreplication.dynamodb.amazonaws.com"
                                    ]
                                }
                            }
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": "*"
                        }
                    ]
                },
                "Environment": {
                    "Variables": {
                        "HL7MESSAGES_TABLE_NAME": {
                            "Ref": "hl7messages"
                        },
                        "HL7MESSAGES_TABLE_ARN": {
                            "Fn::GetAtt": [
                                "hl7messages",
                                "Arn"
                            ]
                        }
                    }
                }
            }
        },
        "PostHl7MessageLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "DeletionPolicy": "Retain",
            "Properties": {
                "LogGroupName": {
                    "Fn::Sub": "/aws/lambda/${PostHl7Message}"
                }
            }
        },
        "hl7messages": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": "messageId",
                        "AttributeType": "S"
                    }
                ],
                "BillingMode": "PAY_PER_REQUEST",
                "KeySchema": [
                    {
                        "AttributeName": "messageId",
                        "KeyType": "HASH"
                    }
                ],
                "StreamSpecification": {
                    "StreamViewType": "NEW_AND_OLD_IMAGES"
                }
            }
        }
    }
}